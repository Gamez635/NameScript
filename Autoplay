--// Gui Executor: Set Spawn (100x100 + Cute Blue Premium Theme + Auto Walk)
-- Created by TheMugenKing, Enhanced & Fixed V2

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "SpawnExecutorGui"
gui.Parent = CoreGui
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = false

-- Drag Handler
local function makeDraggable(frame)
    local dragging, dragInput, dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Main Frame
local main = Instance.new("Frame")
main.Size = UDim2.new(0, 100, 0, 100)
main.Position = UDim2.new(0.5, -50, 0.5, -50)
main.BackgroundColor3 = Color3.fromRGB(20, 140, 255)
main.BorderSizePixel = 0
main.Parent = gui
makeDraggable(main)

local corner = Instance.new("UICorner", main)
corner.CornerRadius = UDim.new(0, 12)
local stroke = Instance.new("UIStroke", main)
stroke.Color = Color3.fromRGB(255, 255, 255)
stroke.Thickness = 1
stroke.Transparency = 0.8

-- Open/Close Button
local openCloseBtn = Instance.new("TextButton")
openCloseBtn.Size = UDim2.new(0, 30, 0, 30)
openCloseBtn.Position = UDim2.new(0, 10, 0, 50)
openCloseBtn.Text = "Close"
openCloseBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
openCloseBtn.TextColor3 = Color3.new(1, 1, 1)
openCloseBtn.Font = Enum.Font.GothamBold
openCloseBtn.TextSize = 16
openCloseBtn.Parent = gui

-- FIXED: CornerRadius typo
Instance.new("UICorner", openCloseBtn).CornerRadius = UDim.new(0, 12)

local openCloseStroke = Instance.new("UIStroke", openCloseBtn)
openCloseStroke.Color = Color3.fromRGB(255, 255, 255)
openCloseStroke.Thickness = 1
openCloseStroke.Transparency = 0.9

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 20)
title.Position = UDim2.new(0, 0, 0, 5)
title.BackgroundTransparency = 1
title.Text = "Set Spawn"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 12
title.Parent = main

-- Scrolling Frame
local contentFrame = Instance.new("ScrollingFrame")
contentFrame.Size = UDim2.new(0.9, 0, 0, 75)
contentFrame.Position = UDim2.new(0.05, 0, 0, 20)
contentFrame.BackgroundTransparency = 1
contentFrame.ScrollBarThickness = 4
contentFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 160, 80)
contentFrame.CanvasSize = UDim2.new(0, 0, 0, 180)
contentFrame.Parent = main

-- Edit Frame
local editFrame = Instance.new("Frame")
editFrame.Size = UDim2.new(0, 80, 0, 100)
editFrame.Position = UDim2.new(1.1, 0, 0, 0)
editFrame.BackgroundColor3 = Color3.fromRGB(20, 140, 255)
editFrame.Visible = false
editFrame.Parent = main
Instance.new("UICorner", editFrame).CornerRadius = UDim.new(0, 12)
local editStroke = Instance.new("UIStroke", editFrame)
editStroke.Color = Color3.fromRGB(255, 255, 255)
editStroke.Thickness = 1
editStroke.Transparency = 0.8

local editList = Instance.new("ScrollingFrame")
editList.Size = UDim2.new(0.9, 0, 0.9, 0)
editList.Position = UDim2.new(0.05, 0, 0.05, 0)
editList.BackgroundTransparency = 1
editList.ScrollBarThickness = 4
editList.ScrollBarImageColor3 = Color3.fromRGB(255, 160, 80)
editList.CanvasSize = UDim2.new(0, 0, 0, 0)
editList.Parent = editFrame

-- Data
local savedPositions = {}
local isAutoPlaying = false
local isRandomMode = false
local showMarkers = false
local showPath = false
local walkDelay = 0.4
local markers = {}
local beams = {}

-- Reset Title
local function resetTitle()
    task.wait(2)
    title.Text = "Set Spawn"
end

-- Update Edit Frame
local function updateEditFrame()
    for _, child in ipairs(editList:GetChildren()) do
        if child:IsA("Frame") then child:Destroy() end
    end
    local yOffset = 0
    for i, pos in ipairs(savedPositions) do
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, -10, 0, 20)
        frame.Position = UDim2.new(0, 5, 0, yOffset)
        frame.BackgroundTransparency = 1
        frame.Parent = editList

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.4, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = string.format("P%d: %.1f", i, pos.X)
        label.TextColor3 = Color3.new(1,1,1)
        label.Font = Enum.Font.Gotham
        label.TextSize = 10
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = frame

        local teleportBtn = Instance.new("TextButton")
        teleportBtn.Size = UDim2.new(0.3, -5, 0, 15)
        teleportBtn.Position = UDim2.new(0.4, 5, 0, 2)
        teleportBtn.Text = "Go"
        teleportBtn.BackgroundColor3 = Color3.fromRGB(80, 200, 80)
        teleportBtn.TextColor3 = Color3.new(1,1,1)
        teleportBtn.Font = Enum.Font.GothamBold
        teleportBtn.TextSize = 10
        Instance.new("UICorner", teleportBtn).CornerRadius = UDim.new(0, 4)
        local tStroke = Instance.new("UIStroke", teleportBtn)
        tStroke.Color = Color3.fromRGB(255,255,255)
        tStroke.Thickness = 1
        tStroke.Transparency = 0.9
        teleportBtn.Parent = frame

        local deleteBtn = Instance.new("TextButton")
        deleteBtn.Size = UDim2.new(0.3, -5, 0, 15)
        deleteBtn.Position = UDim2.new(0.7, 5, 0, 2)
        deleteBtn.Text = "Delete"
        deleteBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
        deleteBtn.TextColor3 = Color3.new(1,1,1)
        deleteBtn.Font = Enum.Font.GothamBold
        deleteBtn.TextSize = 10
        Instance.new("UICorner", deleteBtn).CornerRadius = UDim.new(0, 4)
        local dStroke = Instance.new("UIStroke", deleteBtn)
        dStroke.Color = Color3.fromRGB(255,255,255)
        dStroke.Thickness = 1
        dStroke.Transparency = 0.9
        deleteBtn.Parent = frame

        teleportBtn.MouseButton1Click:Connect(function()
            local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CFrame = CFrame.new(pos)
                title.Text = "Teleported!"
                task.spawn(resetTitle)
            end
        end)

        deleteBtn.MouseButton1Click:Connect(function()
            table.remove(savedPositions, i)
            updateEditFrame()
            countLabel.Text = "Pos: " .. #savedPositions
            title.Text = "Pos Deleted!"
            task.spawn(resetTitle)
            for _, m in ipairs(markers) do m:Destroy() end
            markers = {}
            for _, b in ipairs(beams) do b:Destroy() end
            beams = {}
            if showMarkers then
                for _, p in ipairs(savedPositions) do
                    local part = Instance.new("Part", workspace)
                    part.Size = Vector3.new(1,1,1)
                    part.Position = p
                    part.Anchored = true
                    part.CanCollide = false
                    part.Transparency = 0.5
                    part.Color = Color3.fromRGB(255,120,50)
                    table.insert(markers, part)
                end
            end
            if showPath then
                for i = 1, #savedPositions - 1 do
                    local beam = Instance.new("Beam", workspace)
                    beam.Segments = 1
                    beam.Width0 = 0.2
                    beam.Width1 = 0.2
                    beam.Color = ColorSequence.new(Color3.fromRGB(255,120,50))
                    beam.Transparency = NumberSequence.new(0.5)
                    local a0, a1 = Instance.new("Attachment"), Instance.new("Attachment")
                    a0.Position = savedPositions[i]
                    a1.Position = savedPositions[i+1]
                    a0.Parent = workspace.Terrain
                    a1.Parent = workspace.Terrain
                    beam.Attachment0 = a0
                    beam.Attachment1 = a1
                    table.insert(beams, beam)
                end
            end
        end)

        yOffset = yOffset + 20
    end
    editList.CanvasSize = UDim2.new(0, 0, 0, yOffset)
end

-- Buttons
local addBtn = Instance.new("TextButton")
addBtn.Size = UDim2.new(1, -10, 0, 15)
addBtn.Position = UDim2.new(0, 5, 0, 0)
addBtn.Text = "Add Pos"
addBtn.BackgroundColor3 = Color3.fromRGB(50, 160, 255)
addBtn.TextColor3 = Color3.new(1,1,1)
addBtn.Font = Enum.Font.GothamBold
addBtn.TextSize = 10
Instance.new("UICorner", addBtn).CornerRadius = UDim.new(0, 8)
local aStroke = Instance.new("UIStroke", addBtn)
aStroke.Color = Color3.fromRGB(255,255,255)
aStroke.Thickness = 1
aStroke.Transparency = 0.9
addBtn.Parent = contentFrame

local copyBtn = Instance.new("TextButton")
copyBtn.Size = UDim2.new(1, -10, 0, 15)
copyBtn.Position = UDim2.new(0, 5, 0, 15)
copyBtn.Text = "Copy Script"
copyBtn.BackgroundColor3 = Color3.fromRGB(30, 140, 255)
copyBtn.TextColor3 = Color3.new(1,1,1)
copyBtn.Font = Enum.Font.GothamBold
copyBtn.TextSize = 10
Instance.new("UICorner", copyBtn).CornerRadius = UDim.new(0, 8)
local cStroke = Instance.new("UIStroke", copyBtn)
cStroke.Color = Color3.fromRGB(255,255,255)
cStroke.Thickness = 1
cStroke.Transparency = 0.9
copyBtn.Parent = contentFrame

-- Copy Vector3 with comma at end of every line
local copyVectorBtn = Instance.new("TextButton")
copyVectorBtn.Size = UDim2.new(1, -10, 0, 15)
copyVectorBtn.Position = UDim2.new(0, 5, 0, 30)
copyVectorBtn.Text = "Copy Vector3"
copyVectorBtn.BackgroundColor3 = Color3.fromRGB(20, 130, 255)
copyVectorBtn.TextColor3 = Color3.new(1,1,1)
copyVectorBtn.Font = Enum.Font.GothamBold
copyVectorBtn.TextSize = 10
Instance.new("UICorner", copyVectorBtn).CornerRadius = UDim.new(0, 8)
local cvStroke = Instance.new("UIStroke", copyVectorBtn)
cvStroke.Color = Color3.fromRGB(255,255,255)
cvStroke.Thickness = 1
cvStroke.Transparency = 0.9
copyVectorBtn.Parent = contentFrame

local autoPlayBtn = Instance.new("TextButton")
autoPlayBtn.Size = UDim2.new(1, -10, 0, 15)
autoPlayBtn.Position = UDim2.new(0, 5, 0, 45)
autoPlayBtn.Text = "Auto Play"
autoPlayBtn.BackgroundColor3 = Color3.fromRGB(40, 150, 255)
autoPlayBtn.TextColor3 = Color3.new(1,1,1)
autoPlayBtn.Font = Enum.Font.GothamBold
autoPlayBtn.TextSize = 10
Instance.new("UICorner", autoPlayBtn).CornerRadius = UDim.new(0, 8)
local apStroke = Instance.new("UIStroke", autoPlayBtn)
apStroke.Color = Color3.fromRGB(255,255,255)
apStroke.Thickness = 1
apStroke.Transparency = 0.9
autoPlayBtn.Parent = contentFrame

local clearBtn = Instance.new("TextButton")
clearBtn.Size = UDim2.new(1, -10, 0, 15)
clearBtn.Position = UDim2.new(0, 5, 0, 60)
clearBtn.Text = "Clear Pos"
clearBtn.BackgroundColor3 = Color3.fromRGB(10, 120, 255)
clearBtn.TextColor3 = Color3.new(1,1,1)
clearBtn.Font = Enum.Font.GothamBold
clearBtn.TextSize = 10
Instance.new("UICorner", clearBtn).CornerRadius = UDim.new(0, 8)
local clStroke = Instance.new("UIStroke", clearBtn)
clStroke.Color = Color3.fromRGB(255,255,255)
clStroke.Thickness = 1
clStroke.Transparency = 0.9
clearBtn.Parent = contentFrame

local delayBox = Instance.new("TextBox")
delayBox.Size = UDim2.new(1, -10, 0, 15)
delayBox.Position = UDim2.new(0, 5, 0, 75)
delayBox.BackgroundColor3 = Color3.fromRGB(50, 160, 255)
delayBox.TextColor3 = Color3.new(1,1,1)
delayBox.Font = Enum.Font.Gotham
delayBox.TextSize = 10
delayBox.PlaceholderText = "Delay (s)"
delayBox.Text = "0.4"
Instance.new("UICorner", delayBox).CornerRadius = UDim.new(0, 8)
local dStroke = Instance.new("UIStroke", delayBox)
dStroke.Color = Color3.fromRGB(255,255,255)
dStroke.Thickness = 1
dStroke.Transparency = 0.9
delayBox.Parent = contentFrame

local modeBtn = Instance.new("TextButton")
modeBtn.Size = UDim2.new(1, -10, 0, 15)
modeBtn.Position = UDim2.new(0, 5, 0, 90)
modeBtn.Text = "Mode: Urut"
modeBtn.BackgroundColor3 = Color3.fromRGB(60, 170, 255)
modeBtn.TextColor3 = Color3.new(1,1,1)
modeBtn.Font = Enum.Font.GothamBold
modeBtn.TextSize = 10
Instance.new("UICorner", modeBtn).CornerRadius = UDim.new(0, 8)
local mStroke = Instance.new("UIStroke", modeBtn)
mStroke.Color = Color3.fromRGB(255,255,255)
mStroke.Thickness = 1
mStroke.Transparency = 0.9
modeBtn.Parent = contentFrame

local markerBtn = Instance.new("TextButton")
markerBtn.Size = UDim2.new(1, -10, 0, 15)
markerBtn.Position = UDim2.new(0, 5, 0, 105)
markerBtn.Text = "Show Markers"
markerBtn.BackgroundColor3 = Color3.fromRGB(70, 180, 255)
markerBtn.TextColor3 = Color3.new(1,1,1)
markerBtn.Font = Enum.Font.GothamBold
markerBtn.TextSize = 10
Instance.new("UICorner", markerBtn).CornerRadius = UDim.new(0, 8)
local mkStroke = Instance.new("UIStroke", markerBtn)
mkStroke.Color = Color3.fromRGB(255,255,255)
mkStroke.Thickness = 1
mkStroke.Transparency = 0.9
markerBtn.Parent = contentFrame

local editBtn = Instance.new("TextButton")
editBtn.Size = UDim2.new(1, -10, 0, 15)
editBtn.Position = UDim2.new(0, 5, 0, 120)
editBtn.Text = "Edit Pos"
editBtn.BackgroundColor3 = Color3.fromRGB(80, 190, 255)
editBtn.TextColor3 = Color3.new(1,1,1)
editBtn.Font = Enum.Font.GothamBold
editBtn.TextSize = 10
Instance.new("UICorner", editBtn).CornerRadius = UDim.new(0, 8)
local eStroke = Instance.new("UIStroke", editBtn)
eStroke.Color = Color3.fromRGB(255,255,255)
eStroke.Thickness = 1
eStroke.Transparency = 0.9
editBtn.Parent = contentFrame

local pathBtn = Instance.new("TextButton")
pathBtn.Size = UDim2.new(1, -10, 0, 15)
pathBtn.Position = UDim2.new(0, 5, 0, 135)
pathBtn.Text = "Show Path"
pathBtn.BackgroundColor3 = Color3.fromRGB(90, 200, 255)
pathBtn.TextColor3 = Color3.new(1,1,1)
pathBtn.Font = Enum.Font.GothamBold
pathBtn.TextSize = 10
Instance.new("UICorner", pathBtn).CornerRadius = UDim.new(0, 8)
local pStroke = Instance.new("UIStroke", pathBtn)
pStroke.Color = Color3.fromRGB(255,255,255)
pStroke.Thickness = 1
pStroke.Transparency = 0.9
pathBtn.Parent = contentFrame

local countLabel = Instance.new("TextLabel")
countLabel.Size = UDim2.new(1, -10, 0, 15)
countLabel.Position = UDim2.new(0, 5, 0, 150)
countLabel.BackgroundTransparency = 1
countLabel.Text = "Pos: 0"
countLabel.TextColor3 = Color3.fromRGB(200, 220, 255)
countLabel.Font = Enum.Font.GothamSemibold
countLabel.TextSize = 10
countLabel.Parent = contentFrame

-- Open/Close
local isOpen = true
openCloseBtn.MouseButton1Click:Connect(function()
    isOpen = not isOpen
    main.Visible = isOpen
    editFrame.Visible = false
    openCloseBtn.Text = isOpen and "Close" or "Open"
    openCloseBtn.BackgroundColor3 = isOpen and Color3.fromRGB(255,80,80) or Color3.fromRGB(80,200,80)
end)

-- Add Position
addBtn.MouseButton1Click:Connect(function()
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        table.insert(savedPositions, hrp.Position)
        countLabel.Text = "Pos: " .. #savedPositions
        title.Text = "Pos Added!"
        updateEditFrame()
        if showMarkers then
            local p = Instance.new("Part", workspace)
            p.Size = Vector3.new(1,1,1)
            p.Position = hrp.Position
            p.Anchored = true
            p.CanCollide = false
            p.Transparency = 0.5
            p.Color = Color3.fromRGB(255,120,50)
            table.insert(markers, p)
        end
        task.spawn(resetTitle)
    else
        title.Text = "No HRP!"
        task.spawn(resetTitle)
    end
end)

-- Copy Script
copyBtn.MouseButton1Click:Connect(function()
    local code = "local hrp = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')\nlocal list = {\n"
    for _, pos in ipairs(savedPositions) do
        code = code .. string.format("    Vector3.new(%.2f, %.2f, %.2f),\n", pos.X, pos.Y, pos.Z)
    end
    code = code .. "}\nfor _, pos in ipairs(list) do task.wait(0.4) hrp.CFrame = CFrame.new(pos) end"
    pcall(setclipboard, code)
    title.Text = "Script Copied!"
    task.spawn(resetTitle)
end)

-- Copy Vector3 with comma at end of every line
copyVectorBtn.MouseButton1Click:Connect(function()
    if #savedPositions == 0 then
        title.Text = "No Pos!"
        task.spawn(resetTitle)
        return
    end

    local lines = {}
    for _, pos in ipairs(savedPositions) do
        table.insert(lines, string.format("Vector3.new(%.3f, %.3f, %.3f),", pos.X, pos.Y, pos.Z))
    end

    local code = table.concat(lines, "\n")
    pcall(setclipboard, code)
    title.Text = "Vector3 Copied!"
    task.spawn(resetTitle)
end)

-- Auto Play
local autoPlayConnection
autoPlayBtn.MouseButton1Click:Connect(function()
    if isAutoPlaying then
        if autoPlayConnection then autoPlayConnection:Disconnect() end
        isAutoPlaying = false
        autoPlayBtn.Text = "Auto Play"
        autoPlayBtn.BackgroundColor3 = Color3.fromRGB(40,150,255)
        title.Text = "Stopped!"
        task.spawn(resetTitle)
        return
    end

    local char = LocalPlayer.Character
    local hum = char and char:FindFirstChild("Humanoid")
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hum or not hrp or #savedPositions == 0 then
        title.Text = "Error!"
        task.spawn(resetTitle)
        return
    end

    isAutoPlaying = true
    autoPlayBtn.Text = "Stop"
    autoPlayBtn.BackgroundColor3 = Color3.fromRGB(255,80,80)
    title.Text = "Walking..."
    task.spawn(resetTitle)

    autoPlayConnection = RunService.Heartbeat:Connect(function()
        if not isAutoPlaying or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then
            isAutoPlaying = false
            if autoPlayConnection then autoPlayConnection:Disconnect() end
            autoPlayBtn.Text = "Auto Play"
            autoPlayBtn.BackgroundColor3 = Color3.fromRGB(40,150,255)
            return
        end

        local indices = {}
        if isRandomMode then
            for i = 1, #savedPositions do indices[i] = i end
            for i = #indices, 2, -1 do
                local j = math.random(1, i)
                indices[i], indices[j] = indices[j], indices[i]
            end
        end

        local i = 1
        while isAutoPlaying do
            local idx = isRandomMode and indices[i] or i
            hum:MoveTo(savedPositions[idx])
            hum.MoveToFinished:Wait()
            task.wait(walkDelay)
            i = i + 1
            if i > #savedPositions then i = 1 end
        end
    end)
end)

-- Clear
clearBtn.MouseButton1Click:Connect(function()
    savedPositions = {}
    for _, m in ipairs(markers) do m:Destroy() end
    for _, b in ipairs(beams) do b:Destroy() end
    markers, beams = {}, {}
    countLabel.Text = "Pos: 0"
    updateEditFrame()
    title.Text = "Cleared!"
    task.spawn(resetTitle)
end)

-- Delay
delayBox.FocusLost:Connect(function(enter)
    if enter then
        local n = tonumber(delayBox.Text)
        if n and n >= 0.1 and n <= 5 then
            walkDelay = n
            title.Text = "Delay: " .. n .. "s"
        else
            title.Text = "Invalid!"
        end
        task.spawn(resetTitle)
    end
end)

-- Mode
modeBtn.MouseButton1Click:Connect(function()
    isRandomMode = not isRandomMode
    modeBtn.Text = isRandomMode and "Mode: Acak" or "Mode: Urut"
    title.Text = isRandomMode and "Random!" or "Sequential!"
    task.spawn(resetTitle)
end)

-- Markers
markerBtn.MouseButton1Click:Connect(function()
    showMarkers = not showMarkers
    markerBtn.Text = showMarkers and "Hide Markers" or "Show Markers"
    if showMarkers then
        for _, pos in ipairs(savedPositions) do
            local p = Instance.new("Part", workspace)
            p.Size = Vector3.new(1,1,1)
            p.Position = pos
            p.Anchored = true
            p.CanCollide = false
            p.Transparency = 0.5
            p.Color = Color3.fromRGB(255,120,50)
            table.insert(markers, p)
        end
    else
        for _, m in ipairs(markers) do m:Destroy() end
        markers = {}
    end
    title.Text = showMarkers and "Markers On!" or "Markers Off!"
    task.spawn(resetTitle)
end)

-- Edit
editBtn.MouseButton1Click:Connect(function()
    editFrame.Visible = not editFrame.Visible
    title.Text = editFrame.Visible and "Editing..." or "Set Spawn"
end)

-- Path
pathBtn.MouseButton1Click:Connect(function()
    showPath = not showPath
    pathBtn.Text = showPath and "Hide Path" or "Show Path"
    if showPath then
        for i = 1, #savedPositions - 1 do
            local beam = Instance.new("Beam", workspace)
            beam.Width0 = 0.2
            beam.Width1 = 0.2
            beam.Color = ColorSequence.new(Color3.fromRGB(255,120,50))
            beam.Transparency = NumberSequence.new(0.5)
            local a0, a1 = Instance.new("Attachment"), Instance.new("Attachment")
            a0.Position = savedPositions[i]
            a1.Position = savedPositions[i+1]
            a0.Parent = workspace.Terrain
            a1.Parent = workspace.Terrain
            beam.Attachment0 = a0
            beam.Attachment1 = a1
            table.insert(beams, beam)
        end
    else
        for _, b in ipairs(beams) do b:Destroy() end
        beams = {}
    end
    title.Text = showPath and "Path On!" or "Path Off!"
    task.spawn(resetTitle)
end)

-- Hover Effect
local function hover(btn)
    local orig = btn.BackgroundColor3
    btn.MouseEnter:Connect(function() btn.BackgroundColor3 = orig:Lerp(Color3.new(1,1,1), 0.2) end)
    btn.MouseLeave:Connect(function() btn.BackgroundColor3 = orig end)
end
for _, b in {addBtn, copyBtn, copyVectorBtn, autoPlayBtn, clearBtn, modeBtn, markerBtn, editBtn, pathBtn, openCloseBtn} do
    hover(b)
end

print("GUI Executor + Fixed Copy Vector3 + No Errors!")
